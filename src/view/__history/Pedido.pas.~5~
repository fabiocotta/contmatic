unit Pedido;

interface

uses
  Winapi.Windows,
  Winapi.Messages,
  System.SysUtils,
  System.Variants,
  System.Classes,
  Vcl.Graphics,
  Vcl.Controls,
  Vcl.Forms,
  Vcl.Dialogs,
  Vcl.ComCtrls,
  Vcl.StdCtrls,
  Vcl.ExtCtrls,
  System.UITypes,
  Vcl.Grids,
  Vcl.DBGrids,
  Datasnap.DBClient,
  Data.DB,

  controller.pedido,
  controller.cliente,
  controller.produto,

  pedido.entidade,
  produto.entidade,
  cliente.entidade,
  pedidoproduto.entidade,

  PedidoConsulta,
  ClienteConsulta,
  ConsultaProduto,

  Util.Conexao,
  Util.Enumerados,
  midaslib;


type
  TfrmPedidos = class(TForm)
    pnlHeader: TPanel;
    Label1: TLabel;
    Label2: TLabel;
    Label3: TLabel;
    edtNumeroPedido: TEdit;
    dtpDataEmissao: TDateTimePicker;
    edtClienteCodigo: TEdit;
    btCliente: TButton;
    edtClienteNome: TEdit;
    btConsultaPedido: TButton;
    btCancelarPedido: TButton;
    pcPedidos: TPageControl;
    TabSheet1: TTabSheet;
    Panel2: TPanel;
    Label4: TLabel;
    Label5: TLabel;
    Label6: TLabel;
    edtProdutoCodigo: TEdit;
    btProduto: TButton;
    edtProdutoDescricao: TEdit;
    edtValorUnitario: TEdit;
    edtQuantidade: TEdit;
    btAdicionar: TButton;
    DBGrid1: TDBGrid;
    Panel3: TPanel;
    btGravarPedido: TButton;
    btCancelarOperacao: TButton;
    Panel4: TPanel;
    btRemover: TButton;
    Panel5: TPanel;
    Label7: TLabel;
    edtValorTotalPedido: TEdit;
    DsPedidoProduto: TDataSource;
    CdsPedidoProduto: TClientDataSet;
    CdsPedidoProdutoCODIGO: TIntegerField;
    CdsPedidoProdutoNUMERO_PEDIDO: TIntegerField;
    CdsPedidoProdutoCODIGO_PRODUTO: TIntegerField;
    CdsPedidoProdutoDESCRICAO_PRODUTO: TStringField;
    CdsPedidoProdutoQUANTIDADE: TIntegerField;
    CdsPedidoProdutoVALOR_UNITARIO: TCurrencyField;
    CdsPedidoProdutoVALOR_TOTAL: TCurrencyField;
    procedure btConsultaPedidoClick(Sender: TObject);
    procedure btClienteClick(Sender: TObject);
  private
    function VerificaCamposPedidoProduto: boolean;
    procedure PopularObjetos(pPedido: TPedidoEntidade);
    procedure PopularControles(pPedido: TPedidoEntidade);
    procedure PopularCdsPedidoProduto;
    { Private declarations }
  public
    { Public declarations }
  end;

var
  frmPedidos: TfrmPedidos;

implementation

{$R *.dfm}

procedure TfrmPedidos.btClienteClick(Sender: TObject);
var
  lFrmClienteConsultaGUI : TfrmClienteConsulta;
  lCliente: TClienteEntidade;
begin
  lCliente := TClienteEntidade.Create;
  lFrmClienteConsulta := TfrmClienteConsulta.Create(self, lCliente);
  try
    if lFrmClienteConsulta.ShowModal = mrOk then
    begin
      edtClienteCodigo.Text := lCliente.Codigo.ToString;
      edtClienteNome.Text := lCliente.Nome
    end;
  finally
    FreeAndNil(lCliente);
    FreeAndNil(lFrmClienteConsulta);
  end;


end;

procedure TfrmPedidos.btConsultaPedidoClick(Sender: TObject);
  var
  lFrmPedidoConsulta : TfrmPedidoConsulta;
  lPedido: TPedidoEntidade;
  lPedidoControlador: TPedidoControlador;
begin
  lPedido := TPedidoEntidade.Create;
  lPedidoControlador := TPedidoControlador.Create;
  lFrmPedidoConsulta := TfrmPedidoConsulta.Create(self, lPedido, otpConsulta);
  try
    if lFrmPedidoConsulta.ShowModal = mrOk then
    begin
      try
        LimpaCampos;
        lPedidoControlador.ObterPedido(lPedido.NumeroPedido, lPedido);
        if lPedido.NumeroPedido = 0 then
          MessageDlg('Numero do pedido não encontrado!', TMsgDlgType.mtWarning, [mbOK], 0)
        else
          PopularControles(lPedido);
      except
        on E: Exception do
        begin
          MessageDlg('Erro ao consultar pedido de numero '+lPedido.NumeroPedido.ToString+
            ' ! mensagem tecnica: '+E.Message, TMsgDlgType.mtError, [mbOK], 0);
        end;
      end;
    end;
  finally
    FreeAndNil(lPedido);
    FreeAndNil(lPedidoControlador);
    FreeAndNil(lFrmPedidoConsulta);
  end;

end;

procedure TfrmPedidos.PopularObjetos(pPedido: TPedidoEntidade);
begin
  pPedido.NumeroPedido := StrToInt(edtNumeroPedido.Text);
  pPedido.DataEmissao := dtpDataEmissao.DateTime;
  pPedido.Cliente.Codigo := StrToInt(edtClienteCodigo.Text);
  pPedido.ListaPedidoProduto.PopularListaPedidoProduto(CdsPedidoProduto);
  pPedido.ValorTotal := StrToCurr(StringReplace(edtValorTotalPedido.Text,'.','', [rfReplaceAll]));
end;

function TfrmPedidos.VerificaCamposPedidoProduto: boolean;
begin
  Result := True;
  if edtProdutoCodigo.Text = '' then
  begin
    MessageDlg('Codigo do produto não informado! Preencha. ', TMsgDlgType.mtWarning, [mbOK], 0);
    edtProdutoCodigo.SetFocus;
    Result := false;
  end
  else if edtProdutoDescricao.Text = '' then
  begin
    MessageDlg('Descricao do produto não informado! Preencha. ', TMsgDlgType.mtWarning, [mbOK], 0);
    edtProdutoCodigo.SetFocus;
    Result := false;
  end
  else if edtValorUnitario.Text = '' then
  begin
    MessageDlg('Valor unitario não informado! Preencha. ', TMsgDlgType.mtWarning, [mbOK], 0);
    edtValorUnitario.SetFocus;
    Result := false;
  end
  else if edtQuantidade.Text = '' then
  begin
    MessageDlg('Quantidade não informado! Preencha. ', TMsgDlgType.mtWarning, [mbOK], 0);
    edtQuantidade.SetFocus;
    Result := false;
  end
end;

procedure TfrmPedidos.PopularCdsPedidoProduto;
begin
  CdsPedidoProduto.FieldByName('NUMERO_PEDIDO').AsString := edtNumeroPedido.Text;
  CdsPedidoProduto.FieldByName('CODIGO').AsInteger := FCodigoPedidoProduto;
  CdsPedidoProduto.FieldByName('CODIGO_PRODUTO').AsString := edtProdutoCodigo.Text;
  CdsPedidoProduto.FieldByName('DESCRICAO_PRODUTO').AsString := edtProdutoDescricao.Text;
  CdsPedidoProduto.FieldByName('QUANTIDADE').AsString := edtQuantidade.Text;
  CdsPedidoProduto.FieldByName('VALOR_UNITARIO').AsString := edtValorUnitario.Text;
  CdsPedidoProduto.FieldByName('VALOR_TOTAL').AsString := CurrToStr(
    (StrToInt(edtQuantidade.Text)* StrToCurr(edtValorUnitario.Text)));
end;

procedure TfrmPedidos.PopularControles(pPedido: TPedidoEntidade);
begin
  edtNumeroPedido.Text := pPedido.NumeroPedido.ToString;
  dtpDataEmissao.DateTime := pPedido.DataEmissao;
  edtClienteCodigo.Text := pPedido.Cliente.Codigo.ToString;
  edtClienteNome.Text := pPedido.Cliente.Nome;
  PopularCdsPedidoProduto(pPedido.NumeroPedido, pPedido.ListaPedidoProduto);
end;



end.
